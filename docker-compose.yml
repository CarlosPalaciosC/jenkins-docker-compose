version: "2.1"

services:
  jenkins:
    build: ./jenkins
    image: jenkins
    container_name: jenkins
    ports:
      - "8080:8080"
    networks:
      - devops
    environment:
      - JENKINS_OPTS="--prefix=/jenkins"
    volumes:
      - /opt/tools-devops/Source/docker/build/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

  artifactory:
    build: ./artifactory
    image: artifactory
    container_name: artifactory
    ports:
      - 8081:8081
    networks:
      - devops
    volumes:
     - /opt/tools-devops/Source/docker/build/artifactory:/var/opt/jfrog/artifactory
    environment:
    #  - DB_URL=jdbc:postgresql://db:5432/artifactory
      - DB_TYPE=postgresql
    # The following must match the POSTGRES_USER and POSTGRES_PASSWORD values passed to PostgreSQL
      - DB_USER=artifactory
      - DB_PASSWORD=artifactory
    # Add extra Java options by uncommenting the following line
    #  - EXTRA_JAVA_OPTIONS=-Xmx4g
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000
    depends_on:
      db:
        condition: service_healthy

  db:
    build: ./postgresql
    image: postgresql
    container_name: postgresql
    ports:
       - "5432:5432"
    networks:
      - devops
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      # - postgresql:/var/lib/postgresql
      - /opt/tools-devops/Source/docker/build/postgresql:/var/lib/postgresql
      # This needs explicit mapping due to https://github.com/docker-library/postgres/blob/4e48e3228a30763913ece952c611e5e9b95c8759/Dockerfile.template#L52
      - /opt/tools-devops/Source/docker/build/postgresql/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3

networks:
  devops:
    driver: bridge
